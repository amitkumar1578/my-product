{"ast":null,"code":"var _jsxFileName = \"/home/amit/Desktop/playdiator_M/my-product/src/ProductList.js\";\nimport React, { Component } from 'react';\nimport { Modal, Form, Button, Col, Row, Input, Select, DatePicker } from 'antd';\nimport { PlusOutlined, DeleteOutlined } from '@ant-design/icons';\nimport { Card, Rate } from 'antd';\nimport { Popconfirm, message } from 'antd';\nimport { connect } from 'react-redux';\nconst text = 'Are you sure to delete this product?';\nconst {\n  Option\n} = Select; // const products = [{\n//     name: 'camera',\n//     rate: 4,\n//     quality: 3\n// }, {\n//     name: 'mobile',\n//     rate: 1,\n//     quality: 2\n// }, {\n//     name: 'laptop',\n//     rate: 2,\n//     quality: 1\n// }, {\n//     name: 'bike',\n//     rate: 5,\n//     quality: 3\n// }, {\n//     name: 'guitar',\n//     rate: 3,\n//     quality: 3\n// }];\n\nconst layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16\n  }\n};\n\nconst onFinish = values => {};\n\nconst onFinishFailed = errorInfo => {\n  console.log('Failed:', errorInfo);\n};\n\nclass ProductList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ModalText: 'Content of the modal',\n      visible: false,\n      confirmLoading: false\n    };\n\n    this.deleteProd = name => {\n      this.setState({\n        deleteprdName: name\n      });\n    };\n\n    this.confirm = () => {\n      message.info('Clicked on Yes.');\n      this.props.dispatch({\n        type: 'DELETE_PRODUCT',\n        name: this.state.deleteprdName\n      });\n    };\n\n    this.showModal = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.handleOk = () => {\n      this.setState({\n        ModalText: 'The modal will be closed after two seconds',\n        confirmLoading: true\n      });\n      setTimeout(() => {\n        this.setState({\n          visible: false,\n          confirmLoading: false\n        });\n      }, 2000);\n    };\n\n    this.handleCancel = () => {\n      console.log('Clicked cancel button');\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.state = {\n      isToggleOn: true,\n      deleteprdName: ''\n    };\n    this.showModal = this.showModal.bind(this);\n  }\n\n  render() {\n    const {\n      visible,\n      confirmLoading,\n      ModalText\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.showModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(PlusOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }\n    }), \" New Product\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      title: \"Product List\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }, this.props.products.map(prd => {\n      return /*#__PURE__*/React.createElement(Card.Grid, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 36\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 37\n        }\n      }, \"Product name -\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 65\n        }\n      }, prd.name)), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 37\n        }\n      }, \"Product Rate -\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(Rate, {\n        disabled: true,\n        defaultValue: prd.rate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 71\n        }\n      }))), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 37\n        }\n      }, \"Product Quality -\"), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 67\n        }\n      }, \"  \", prd.quality)), /*#__PURE__*/React.createElement(Popconfirm, {\n        placement: \"topRight\",\n        title: text,\n        onConfirm: this.confirm,\n        okText: \"Yes\",\n        cancelText: \"No\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"danger\",\n        onClick: () => this.deleteProd(prd.name),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(DeleteOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 41\n        }\n      }))));\n    }))), /*#__PURE__*/React.createElement(Modal, {\n      title: \"Add Product\",\n      visible: visible,\n      onOk: this.handleOk,\n      confirmLoading: confirmLoading,\n      onCancel: this.handleCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form, Object.assign({}, layout, {\n      name: \"basic\",\n      initialValues: {\n        remember: true\n      },\n      onFinish: onFinish,\n      onFinishFailed: onFinishFailed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"productName\",\n      name: \"productName\",\n      rules: [{\n        required: true,\n        message: 'Please input  productName!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"productRate\",\n      name: \"productRate\",\n      rules: [{\n        required: true,\n        message: 'Please input  productRate!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Rate, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"productQuality\",\n      label: \"productQuality\",\n      hasFeedback: true,\n      rules: [{\n        required: true,\n        message: 'Please select product Quality!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      placeholder: \"Please select product Quality\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Option, {\n      value: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 33\n      }\n    }, \"1\"), /*#__PURE__*/React.createElement(Option, {\n      value: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 33\n      }\n    }, \"2\"), /*#__PURE__*/React.createElement(Option, {\n      value: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 33\n      }\n    }, \"3\"))), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, tailLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 29\n      }\n    }, \"Add Product\")))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    products: state\n  };\n};\n\nexport default connect(mapStateToProps)(ProductList);","map":{"version":3,"sources":["/home/amit/Desktop/playdiator_M/my-product/src/ProductList.js"],"names":["React","Component","Modal","Form","Button","Col","Row","Input","Select","DatePicker","PlusOutlined","DeleteOutlined","Card","Rate","Popconfirm","message","connect","text","Option","layout","labelCol","span","wrapperCol","tailLayout","offset","onFinish","values","onFinishFailed","errorInfo","console","log","ProductList","constructor","props","state","ModalText","visible","confirmLoading","deleteProd","name","setState","deleteprdName","confirm","info","dispatch","type","showModal","handleOk","setTimeout","handleCancel","isToggleOn","bind","render","margin","products","map","prd","rate","quality","remember","required","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Modal, Form, Button, Col, Row, Input, Select, DatePicker } from 'antd';\nimport { PlusOutlined, DeleteOutlined } from '@ant-design/icons'\nimport { Card, Rate } from 'antd';\nimport { Popconfirm, message } from 'antd';\nimport { connect } from 'react-redux';\nconst text = 'Are you sure to delete this product?';\nconst { Option } = Select;\n// const products = [{\n//     name: 'camera',\n//     rate: 4,\n//     quality: 3\n// }, {\n//     name: 'mobile',\n//     rate: 1,\n//     quality: 2\n// }, {\n//     name: 'laptop',\n//     rate: 2,\n//     quality: 1\n// }, {\n//     name: 'bike',\n//     rate: 5,\n//     quality: 3\n// }, {\n//     name: 'guitar',\n//     rate: 3,\n//     quality: 3\n// }];\nconst layout = {\n    labelCol: {\n        span: 8,\n    },\n    wrapperCol: {\n        span: 16,\n    },\n};\nconst tailLayout = {\n    wrapperCol: {\n        offset: 8,\n        span: 16,\n    },\n};\nconst onFinish = values => {\n\n\n\n};\n\nconst onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n};\n\nclass ProductList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { isToggleOn: true, deleteprdName: '' };\n        this.showModal = this.showModal.bind(this)\n    }\n\n\n\n    state = {\n        ModalText: 'Content of the modal',\n        visible: false,\n        confirmLoading: false,\n    };\n    deleteProd = (name) => {\n        this.setState({ deleteprdName: name })\n    }\n    confirm = () => {\n\n        message.info('Clicked on Yes.');\n        this.props.dispatch({ type: 'DELETE_PRODUCT', name: this.state.deleteprdName })\n\n    }\n    showModal = () => {\n\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = () => {\n        this.setState({\n            ModalText: 'The modal will be closed after two seconds',\n            confirmLoading: true,\n        });\n        setTimeout(() => {\n            this.setState({\n                visible: false,\n                confirmLoading: false,\n            });\n        }, 2000);\n    };\n\n    handleCancel = () => {\n        console.log('Clicked cancel button');\n        this.setState({\n            visible: false,\n        });\n    };\n    render() {\n        const { visible, confirmLoading, ModalText } = this.state;\n        return (\n            <>\n                <div style={{ margin: '10px' }}>\n                    <Button type=\"primary\" onClick={this.showModal}>\n                        <PlusOutlined /> New Product\n        </Button>\n                </div>\n                <div>\n\n                    <Card title=\"Product List\">\n\n                        {this.props.products.map(prd => {\n                            return <Card.Grid >\n                                <p>\n                                    <span>Product name -</span> <span>{prd.name}</span>\n                                </p>\n                                <p>\n                                    <span>Product Rate -</span> <span><Rate disabled defaultValue={prd.rate} /></span>\n                                </p>\n                                <p>\n                                    <span>Product Quality -</span><span>  {prd.quality}</span>\n                                </p>\n                                <Popconfirm\n                                    placement=\"topRight\"\n                                    title={text}\n                                    onConfirm={this.confirm}\n                                    okText=\"Yes\"\n                                    cancelText=\"No\"\n                                >\n\n                                    <Button type=\"danger\" onClick={() => this.deleteProd(prd.name)}>\n                                        <DeleteOutlined />\n                                    </Button>\n                                </Popconfirm>\n\n                            </Card.Grid>\n                        })}\n                    </Card>\n\n                </div>\n                <Modal\n                    title=\"Add Product\"\n                    visible={visible}\n                    onOk={this.handleOk}\n                    confirmLoading={confirmLoading}\n                    onCancel={this.handleCancel}\n                >\n                    <Form\n                        {...layout}\n                        name=\"basic\"\n                        initialValues={{\n                            remember: true,\n                        }}\n                        onFinish={onFinish}\n                        onFinishFailed={onFinishFailed}\n                    >\n                        <Form.Item\n                            label=\"productName\"\n                            name=\"productName\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input  productName!',\n                                },\n\n                            ]}\n                        >\n                            <Input />\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"productRate\"\n                            name=\"productRate\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input  productRate!',\n                                },\n\n\n                            ]}\n                        >\n                            <Rate />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"productQuality\"\n                            label=\"productQuality\"\n                            hasFeedback\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please select product Quality!',\n                                },\n                            ]}\n                        >\n                            <Select placeholder=\"Please select product Quality\">\n                                <Option value={1}>1</Option>\n                                <Option value={2}>2</Option>\n                                <Option value={3}>3</Option>\n                            </Select>\n                        </Form.Item>\n\n\n\n                        <Form.Item {...tailLayout}>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Add Product\n        </Button>\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    console.log(state)\n    return {\n        products: state\n    }\n}\nexport default connect(mapStateToProps)(ProductList);"]},"metadata":{},"sourceType":"module"}
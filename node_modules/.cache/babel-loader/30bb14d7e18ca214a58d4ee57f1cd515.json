{"ast":null,"code":"var _jsxFileName = \"/home/amit/Desktop/playdiator_M/my-product/src/ProductList.js\";\nimport React, { Component } from 'react';\nimport { Modal, Form, Button, Col, Row, Input, Select, DatePicker } from 'antd';\nimport { PlusOutlined, DeleteOutlined } from '@ant-design/icons';\nimport { Card, Rate } from 'antd';\nconst products = [{\n  name: 'camera',\n  rate: 4,\n  quality: 3\n}, {\n  name: 'mobile',\n  rate: 1,\n  quality: 2\n}, {\n  name: 'laptop',\n  rate: 2,\n  quality: 1\n}, {\n  name: 'bike',\n  rate: 5,\n  quality: 3\n}, {\n  name: 'guitar',\n  rate: 3,\n  quality: 3\n}];\nexport default class ProductList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ModalText: 'Content of the modal',\n      visible: false,\n      confirmLoading: false\n    };\n\n    this.showModal = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.handleOk = () => {\n      this.setState({\n        ModalText: 'The modal will be closed after two seconds',\n        confirmLoading: true\n      });\n      setTimeout(() => {\n        this.setState({\n          visible: false,\n          confirmLoading: false\n        });\n      }, 2000);\n    };\n\n    this.handleCancel = () => {\n      console.log('Clicked cancel button');\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.state = {\n      isToggleOn: true\n    };\n    this.showModal = this.showModal.bind(this);\n  }\n\n  render() {\n    const {\n      visible,\n      confirmLoading,\n      ModalText\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.showModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(PlusOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }\n    }), \" New Product\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      title: \"Product List\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, products.map(prd => {\n      return /*#__PURE__*/React.createElement(Card.Grid, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 36\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 37\n        }\n      }, \"Product name -\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 65\n        }\n      }, prd.name)), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 37\n        }\n      }, \"Product Rate -\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(Rate, {\n        disabled: true,\n        defaultValue: prd.rate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 71\n        }\n      }))), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 37\n        }\n      }, \"Product Quality -\"), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 67\n        }\n      }, \"  \", prd.quality)), /*#__PURE__*/React.createElement(Button, {\n        type: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(DeleteOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 37\n        }\n      })));\n    }))), /*#__PURE__*/React.createElement(Modal, {\n      title: \"Title\",\n      visible: visible,\n      onOk: this.handleOk,\n      confirmLoading: confirmLoading,\n      onCancel: this.handleCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form, Object.assign({}, layout, {\n      name: \"basic\",\n      initialValues: {\n        remember: true\n      },\n      onFinish: onFinish,\n      onFinishFailed: onFinishFailed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"productName\",\n      name: \"productName\",\n      rules: [{\n        required: true,\n        message: 'Please input  productName!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"productName\",\n      name: \"productName\",\n      rules: [{\n        required: true,\n        message: 'Please input  productName!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"productName\",\n      name: \"productName\",\n      rules: [{\n        required: true,\n        message: 'Please input  productName!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, tailLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 29\n      }\n    }, \"Login\")))));\n  }\n\n}","map":{"version":3,"sources":["/home/amit/Desktop/playdiator_M/my-product/src/ProductList.js"],"names":["React","Component","Modal","Form","Button","Col","Row","Input","Select","DatePicker","PlusOutlined","DeleteOutlined","Card","Rate","products","name","rate","quality","ProductList","constructor","props","state","ModalText","visible","confirmLoading","showModal","setState","handleOk","setTimeout","handleCancel","console","log","isToggleOn","bind","render","margin","map","prd","layout","remember","onFinish","onFinishFailed","required","message","tailLayout"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Modal, Form, Button, Col, Row, Input, Select, DatePicker } from 'antd';\nimport { PlusOutlined, DeleteOutlined } from '@ant-design/icons'\nimport { Card, Rate } from 'antd';\nconst products = [{\n    name: 'camera',\n    rate: 4,\n    quality: 3\n}, {\n    name: 'mobile',\n    rate: 1,\n    quality: 2\n}, {\n    name: 'laptop',\n    rate: 2,\n    quality: 1\n}, {\n    name: 'bike',\n    rate: 5,\n    quality: 3\n}, {\n    name: 'guitar',\n    rate: 3,\n    quality: 3\n}];\nexport default class ProductList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { isToggleOn: true };\n        this.showModal = this.showModal.bind(this)\n    }\n\n\n    state = {\n        ModalText: 'Content of the modal',\n        visible: false,\n        confirmLoading: false,\n    };\n\n    showModal = () => {\n\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = () => {\n        this.setState({\n            ModalText: 'The modal will be closed after two seconds',\n            confirmLoading: true,\n        });\n        setTimeout(() => {\n            this.setState({\n                visible: false,\n                confirmLoading: false,\n            });\n        }, 2000);\n    };\n\n    handleCancel = () => {\n        console.log('Clicked cancel button');\n        this.setState({\n            visible: false,\n        });\n    };\n    render() {\n        const { visible, confirmLoading, ModalText } = this.state;\n        return (\n            <>\n                <div style={{ margin: '10px' }}>\n                    <Button type=\"primary\" onClick={this.showModal}>\n                        <PlusOutlined /> New Product\n        </Button>\n                </div>\n                <div>\n\n                    <Card title=\"Product List\">\n\n                        {products.map(prd => {\n                            return <Card.Grid >\n                                <p>\n                                    <span>Product name -</span> <span>{prd.name}</span>\n                                </p>\n                                <p>\n                                    <span>Product Rate -</span> <span><Rate disabled defaultValue={prd.rate} /></span>\n                                </p>\n                                <p>\n                                    <span>Product Quality -</span><span>  {prd.quality}</span>\n                                </p>\n                                <Button type=\"danger\">\n                                    <DeleteOutlined />\n                                </Button>\n                            </Card.Grid>\n                        })}\n                    </Card>\n\n                </div >\n                <Modal\n                    title=\"Title\"\n                    visible={visible}\n                    onOk={this.handleOk}\n                    confirmLoading={confirmLoading}\n                    onCancel={this.handleCancel}\n                >\n                    <Form\n                        {...layout}\n                        name=\"basic\"\n                        initialValues={{\n                            remember: true,\n                        }}\n                        onFinish={onFinish}\n                        onFinishFailed={onFinishFailed}\n                    >\n                        <Form.Item\n                            label=\"productName\"\n                            name=\"productName\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input  productName!',\n                                },\n\n                            ]}\n                        >\n                            <Input />\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"productName\"\n                            name=\"productName\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input  productName!',\n                                },\n\n                            ]}\n                        >\n                            <Input />\n                        </Form.Item>\n                        <Form.Item\n                            label=\"productName\"\n                            name=\"productName\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input  productName!',\n                                },\n\n                            ]}\n                        >\n                            <Input />\n                        </Form.Item>\n\n\n\n                        <Form.Item {...tailLayout}>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Login\n        </Button>\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}